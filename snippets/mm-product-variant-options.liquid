{% comment %}
  Renders product variant options

  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.


  Usage:
  {% render 'product-variant-options',
    product: product,
    option: option,
    block: block
  %}
{% endcomment %}
{%- liquid
  assign picker_type = picker_type | default: block.settings.picker_type
  assign variants_available_arr = product.variants | map: 'available'
  assign variants_option1_arr = product.variants | map: 'option1'
  assign variants_option2_arr = product.variants | map: 'option2'
  assign variants_option3_arr = product.variants | map: 'option3'
  assign sectionId = sectionId | default: section.id

  assign product_form_id = 'product-form--' | append: sectionId | append: '--' | append: product.id

  assign downcased_option_name = option.name | downcase 

  if downcased_option_name contains 'color' or downcased_option_name contains 'colour'
    assign is_color_option = true
  endif
-%}

{%- for value in option.values -%}
  {%- liquid
    assign option_disabled = true

    for option1_name in variants_option1_arr
      case option.position
        when 1
          if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 2
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 3
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
      endcase
    endfor
  -%}

  {%- if picker_type == 'button' -%}
    <input
      type="radio"
      id="{{ sectionId }}-{{ option.position }}-{{ forloop.index0 }}-{{ product.id }}"
      name="{{ option.name }}-{{ sectionId }}-{{ product.id }}"
      value="{{ value | escape }}"
      form="{{ product_form_id }}"
      {% if option.selected_value == value %}
        checked
      {% endif %}
      class="[&:checked+label]:tw-outline-1
      {% if option_disabled -%}
        disabled
      {%- endif -%}
      "
    >

    {% comment %}
        Color swatch Instructions:

        1. Create a metaobject definition named 'Color Swatch':
            - Add a 'Single line text' type field called 'Value name'.
            - Add a 'file' type field called 'Image' that accepts 'Images' as file types.
            - Add a 'Color' type field named 'Color'.
            - Save and create a test entry.
    {% endcomment %}


    {% comment %} Color swatches {% endcomment %}
    {% if is_color_option == true %}   
      {% comment %} Finding the metaobject for accessing the swatch bg or color {% endcomment %}
      {% comment %} value_name is case sensitive {% endcomment %}
      {% assign color_swatch_metaobject = shop.metaobjects.color_swatch.values | where: 'value_name', value %}
      {% assign swatch_bg_color = color_swatch_metaobject[0].color | default: value %}
      {% assign swatch_bg_image = color_swatch_metaobject[0].image | img_url %}

      <label 
        for="{{ sectionId }}-{{ option.position }}-{{ forloop.index0 }}-{{ product.id }}" 
        style="background: #f0ebeb;
               background: {{- swatch_bg_color -}}; 
               background: {%- unless swatch_bg_image contains 'no-image' -%}
                              url('{{ swatch_bg_image }}')
                            {%- endunless -%}"
        class="tw-outline tw-outline-black tw-outline-0 tw-inline-block tw-w-[20px] tw-h-[20px]"
      >
        <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
      </label>        
    {% else %}  
      <label for="{{ sectionId }}-{{ option.position }}-{{ forloop.index0 }}-{{ product.id }}">
        {{ value -}}
        <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
      </label>
    {% endif %}
  {%- elsif picker_type == 'dropdown' -%}
    <option
      value="{{ value | escape }}"
      {% if option.selected_value == value %}
        selected="selected"
      {% endif %}
    >
      {% if option_disabled -%}
        {{- 'products.product.value_unavailable' | t: option_value: value -}}
      {%- else -%}
        {{- value -}}
      {%- endif %}
    </option>
  {%- endif -%}
{%- endfor -%}
